<h1>期末報告總攬</h1>
<p>本期末報告總結於於期中操作之V-rep BubbleRob Tutorial 以及本學期 Football table 專案。透過上述兩專案的執行過程中，利用協同及可攜工具進行機械設計，如：Onshape、Github、Ungit、小組 CMSfly等工具。</p>
<p>不需要個別對協同工具去做介紹，說明該項工具在此專案操作的問題，或是延伸的理解。</p>
<blockquote>
<p>/**</p>
<p>Onshape：<br/>行專案協同繪圖，可有效地取代複雜且難取得的坊間繪圖軟體。在學期間專案並沒有受制於保密或專利等約束，遂在雲端免費且開源的平台上，可有效的且有彈性的操作，不須存檔且隨時隨地即可檢視、編輯(此為網際網路穩定區域)，另立分支邀請夥伴，匯入、匯出等等，甚至可以自行為需要功能進行補充。<br/>僅管免費註冊帳好本身並未受到個人化的保護，擁有連結或是透過 public chnnal 找到專案的使用者，也只能進行檢視，無法參與編輯。</p>
<p>**/</p>
</blockquote>
<p>Github 和 Ungit：</p>
<p></p>
<p>專案一：Football table</p>
<p>專案二：Routh sweeping robot 由 BubbleRob Tutorial 自行延伸</p>
<p>各組員必須在 W17 上課之前完成期末報告簡報影片上傳與連結, 並放入本網站之"專案口頭簡報"頁面.</p>
<p>各組必須在 W17 上課之前完成分組期末報告 pdf 檔案, 上傳至各分組的倉儲中, 並將連結提供至本網站之"專案報告書"頁面.</p>
<p>期末報告期間每週對各成員之評分依據下列要項:</p>
<ol>
<li>各組員在各分組網站中所呈現之任務執行內容, 並拍攝操作影音 mp4, 將影片標題署名"國立虎尾科技大學-機械設計工程系-協同產品設計實習 B - 學號及影片主題" 後上傳, 並將影片嵌入本網站各章節頁面中.</li>
<li>每組將提供組長本網站倉儲協同管理權, 專門處理各組員在各分支或 master 分支中的 pull requests, 各組員必須透過以 bg1, bg2 .... 命名之分支對本倉儲改版, 確定內容無誤後, 再設法由組長處理各 pull requests 之內容合併, Github Pages 將設為與 master 分支對應, 各組員之評分將依據各 pull requests 中所列出之學號與內容判定.</li>
<li>請各組員勿將影片檔、圖片檔案或各式檔案送至本倉儲, 影片檔案請上傳至 Youtube, 圖片檔案請送至各組倉儲網站, 各式檔案則請送至各組員 Google Drive 區, 並以嵌入 (iframe), 將影片放入本網站, 其餘圖片或檔案則透過 img 或 a 標註放入各相關頁面.</li>
</ol>
<h4>2b 分組倉儲</h4>
<p><a href="https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g1">https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g1</a>  (<a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g1">2bg1</a>)</p>
<p><a href="https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g2">https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g2</a>  (<a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g2">2bg2</a>)</p>
<p><a href="https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g3_1">https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g3_1</a> (<a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g3_1">2bg3</a>)</p>
<p><a href="https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g4">https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g4</a>  (<a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g4">2bg4</a>)</p>
<p><a href="https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g5">https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g5</a> (<a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g5">2bg5</a>)</p>
<p></p><h1>執行規劃</h1>
<p>按照工業設計中的描述性設計流程，在街道專案的第一步先來定義這是是否為定義完善的問題。檢視整體手足球的專案需求，為一定義不完善的問題，一來規格不明確，二來雖有指定軟體或建議工具，單騎使用的方法以及呈現的展演未被宣告，遂為一定義不完善問題。</p>
<p>概略的規格及參考專利在：<a href="https://2019wcm.blogspot.com/search/label/foosball">Table Foosball 動態系統模擬專案</a></p>
<p><strong>Step1：Rough Modeling 針對功能性和需要的輪廓進行概略性的建模</strong></p>
<blockquote>
<p>建置必要的模型，如球檯、球員、球桿、球(可由V-rep進行直接新增)。</p>
<p>過去學習歷程養成的壞習慣，導致一開始盲目地對著規格定義不明確的工程圖套描，沒有進一步的思考究竟現階段出現模型的目的。在該階段之所以需要模型，源自因為需要可以進行模擬控制的實體，遂模型本身並非主體，而是要能夠搭配V-rep進行物件環境碰撞、程式控制等模擬。</p>
<p>按照課程所提供不完整的規格工程圖建模完成之物件，一來會發現其本身提供的史寸步完善，二來再匯入V-rep 進行模擬後尤其進入 Object Proterties 下的 Body is Dynamic 時，物間開始就其體積對應的重量，在環境產身對應的物理量並且和他物件產生碰撞(含接觸)時，軟體的附載會急遽增加。原因來自於 V-rep和所接觸的 CAE 軟體，物件匯入的方式類似，透過將物件進行網格切割並且，對每個網格進行有限元素等參數計算，行而可在環境中獲得對應條件的狀態。</p>
<p>此種方式會受到模型特徵影響甚遽，物件本身過於複雜之外行如圓角、曲面或甚至是段距離內的特徵扭曲，都可能造成網格切割不完整甚至是轉換成 STL 時形成破面件(壁厚等於 0 的物件)。因此針對不同條件及想要獲得的不同結果，在進行類同於有限元素分析或是鋼體運動模擬等作業時，會針對物件功能對應條件行模型簡化。</p>
<p>詳細建模過程可參考下一張連結：</p>
<p><a href="https://youtu.be/WsVKbFn0rT0">國立虎尾科技大學_機械設計工程系_40423217_Football_Table_Onshape_module_Fall</a></p>
<p><a href="https://cad.onshape.com/documents/5a59c9c739e3ae2de7916f88/w/7547fa5146549789dbd934af/e/399e742d533f4474cf84d8d2">Onshape_針對模擬簡化後的模型</a></p>
</blockquote>
<p><strong>Step2：Object 物件關係</strong></p>
<blockquote>
<p>簡化後的模型已經建立完成並且匯入 V-rep ，即進入第二階段物件關系。</p>
<p>根據 BubbleRob_Tutorial 的操作過程熟悉 V-rep 物件關聯性之於物件本身的控制關係，以及其對於體積以及重量，關係於彼此物件連結的問定性及可靠性。</p>
<p>針對 V-rep Football table 在放置球員時，當同一桿件玉放置多個球員時，起初物件較小遂不明顯，物件勳可以穩定的置於桿件上。但隨著接後的模擬針對簡化後的模型做些調整，除外型曲面的擊球面被修正，因為有機會在擊球時和傾斜的球檯面，受力形成運動死點而將球咬住；再者大小本身也增加了些，目的是除了在程式端增加擊球力道外，亦可透過球員本身的長度產生力矩上的助力。</p>
<p><a href="https://cad.onshape.com/documents/5a59c9c739e3ae2de7916f88/v/cba6f5ae1ab6c459f2a77db7/e/399e742d533f4474cf84d8d2">Onshape_Football_table_V9</a> 修正前</p>
<p><a href="https://cad.onshape.com/documents/5a59c9c739e3ae2de7916f88/w/7547fa5146549789dbd934af/e/399e742d533f4474cf84d8d2">Onshape_Football_table_B2_V13</a> 修正後</p>
<p>綜合上述兩部分修正，已較前一版本球員要來的大。在放置於求桿上時，出現了問題。球桿的體積對應其重量在模擬環境中，無法撐起所放置的球員數量。透過觀察亦可發現當放置的球員樹為奇數時，中間的球員為支撐的支點，而兩側的球員亦是和球桿呈現組立(接觸)關係，再者以中間球員為支點呈槓桿關係。</p>
<p><a href="/get_page/%E5%9F%B7%E8%A1%8C%E8%A6%8F%E5%8A%83/EIRbet6Hqx8">國立虎尾科技大學_機械設計工程系_協同產品設計實習_40423217_V-rep_V-rep_Football_table_P0_R2_V6_增加球員&amp;PID運動控制調整_2019-0606-1135</a></p>
<p>參見應連結 04：00 段落敘述錯誤，支點球員質量必須大於其餘兩側球員質量，且其落差必須接近2^8倍(一側為2^8倍，另一次即為(2^-1)^8倍)。</p>
</blockquote>
<p><strong>Step3：Body is dynamic 運動控制</strong></p>
<blockquote>
<p>物件關係建構完成後，如何透過程式控制物件行對應需求的控制即反映。</p>
<p>透過條件判斷搭配鍵盤控制。</p>
<p>原先參照的球員左右移動為速度控制，其所控制方式為速度疊加</p>
<p><code>if (auxiliaryData[1]==2009) then right_left_velocity=dVel2/0.0025</code></p>
<p><code>if (auxiliaryData[1]==2010) then right_left_velocity=-dVel2/0.0025</code></p>
<p><code>即隨觸鍵次數對速度做累進，剎車亦然(其實沒所謂的剎車</code><code>，僅是以反方向做速度遞減，若要停止遞進需觸及空白鍵停止一切運動狀態)，儘管在其後亦有條件宣告速度上限，但是在對於球員操作上仍然不夠直觀，之餘操作者可以控制球員停滯的區間不夠安定。遂採用位置不盡方式取代速度遞進控制，鎖住之於個點位置移動的快慢，操作者若需要更加得快速到達預想的位置</code><code>，則可以透過觸鍵頻率的增減決定。</code></p>
<p><a href="https://youtu.be/sk-plWRagRY">國立虎尾科技大學_機械設計工程系_協同產品設計實習_40423217_V-rep_Football_table_P0_R2_V5_2019-0604-1725(音量調整)</a></p>
<p>造因於球員本身的碰撞設定和球檯重疊，遂球員移動若未設定邊界，其在接觸球檯時會產生 V-rep 物理引擎運算碰撞造成的物件不穩定性，因此設定超出移動邊界時回到遽距離球檯壁面仍可以保持 0.05m 的間隙。</p>
<p><a href="/get_page/%E5%9F%B7%E8%A1%8C%E8%A6%8F%E5%8A%83/6Az6APmCeH8">國立虎尾科技大學_機械設計工程系_協同產品設計實習_40423217_V-rep_V-rep_Football_table_P0_R2_V5_運動控制修正_2019-0605-0002(音量調整)</a></p>
<p><a href="https://youtu.be/TJR5onWZKzI">國立虎尾科技大學_機械設計工程系_協同產品設計實習_40423217_V-rep_V-rep_Football_table_P0_R2_V6_2019-0606-1630</a></p>
<p>完整程式參見個人倉儲 <a href="https://github.com/40423217/2019spring_2B_personal/issues/1">issues</a>。</p>
<p><code>function sysCall_init()</code><br/><code> forward_back_player= sim.getObjectHandle('Revolute_joint_A')</code><br/><code>-- forward_back_player= sim.getObjectHandle('Revolute_joint0')</code><br/><code>-- forward_back_player= sim.getObjectHandle('Revolute_joint1')</code></p>
<p><code>right_left_handle= sim.getObjectHandle('Prismatic_joint_A')</code><br/><code>--MaxVel=20</code><br/><code>--MaxAng=40</code><br/><code> MaxPos=0.170</code><br/><code> -- right_left_velocity=0</code><br/><code> right_left_position=0</code><br/><code> -- forward_back_velocity=0</code><br/><code> forward_back_position=0</code><br/><code>-- up_down_velocity=0</code><br/><code> dVel1=5;</code><br/><code> dVel2=10;</code><br/><code> dp=1;</code><br/><code> sim.setJointTargetPosition(forward_back_player,forward_back_position)</code><br/><code>-- sim.setJointTargetVelocity(forward_back_player,forward_back_velocity)</code><br/><code>-- sim.setJointTargetVelocity(up_down_handle,up_down_velocity)</code><br/><code> sim.setJointTargetPosition(right_left_handle,right_left_position)</code><br/><code>-- sim.setJointTargetVelocity(right_left_handle,right_left_velocity)</code><br/><code>end</code></p>
<p><code>function sysCall_actuation()</code><br/><code> message,auxiliaryData=sim.getSimulatorMessage()</code><br/><code> while message~=-1 do</code><br/><code> if (message==sim.message_keypress) then</code><br/><code> if (auxiliaryData[1]==32) then --According to ASCII Table key[32] is space key. Press space key stop all actions.</code><br/><code>-- right key</code><br/><code> right_left_position=0</code><br/><code> -- right_left_velocity=0</code><br/><code> forward_back_position=0</code><br/><code>-- forward_back_velocity=0</code><br/><code> sim.setJointForce(forward_back_player, 0)</code><br/><code>-- sim.setJointForce(up_down_handle, 0)</code><br/><code> sim.setJointForce(right_left_handle, 0)</code><br/><code> break</code><br/><code> else</code><br/><code> sim.setJointForce(forward_back_player, 1000000) --The force of hit the ball.</code><br/><code> sim.setJointForce(right_left_handle, 1)</code><br/><code> end</code></p>
<p><code>if (auxiliaryData[1]==2007) then</code><br/><code>-- up key</code><br/><code> forward_back_position=7</code><br/><code> -- forward_back_velocity=dVel1*10</code><br/><code>-- up_down_velocity=dVel1*10</code><br/><code> --right_left_velocity=right_left_velocity+dVel1*1.3</code><br/><code> end</code></p>
<p><code>if (auxiliaryData[1]==2008) then</code><br/><code>-- down key</code><br/><code> forward_back_position=-7</code><br/><code> -- forward_back_velocity=-dVel1*10</code><br/><code>-- up_down_velocity=-dVel1*10</code><br/><code> --right_left_velocity=right_left_velocity-dVel1*1.3</code><br/><code> end</code></p>
<p><br/><code> if (auxiliaryData[1]==2009) then</code><br/><code>-- left key</code><br/><code> right_left_position=right_left_position+dp*0.02</code><br/><code> -- right_left_velocity=dVel2/0.0025</code><br/><code> --up_down_velocity=up_down_velocity+dVel2/0.5</code><br/><code> end</code></p>
<p><code>if (auxiliaryData[1]==2010) then</code><br/><code>-- right key</code><br/><code> right_left_position=right_left_position+dp*-.02</code><br/><code> -- right_left_velocity=-dVel2/0.0025</code><br/><code> --up_down_velocity=up_down_velocity-dVel2/0.5</code><br/><code> end</code></p>
<p><code>end</code><br/><code> message,auxiliaryData=sim.getSimulatorMessage()</code><br/><code> end</code></p>
<p><code>if right_left_position&gt;MaxPos then</code><br/><code> right_left_position=0.165</code><br/><code> end</code><br/><code> if right_left_position&lt;-MaxPos then</code><br/><code> right_left_position=-0.165</code><br/><code> end</code><br/> <br/><code>-- if right_left_velocity&gt;MaxVel then</code><br/><code>-- right_left_velocity=-5</code><br/><code>-- end</code><br/><code>-- if right_left_velocity&lt;-MaxVel then</code><br/><code>-- right_left_velocity=5</code><br/><code>-- end</code><br/><code>-- if up_down_velocity&gt;MaxVel then</code><br/><code>-- up_down_velocity=-50</code><br/><code>-- end</code><br/><code>-- if up_down_velocity&lt;-MaxVel then</code><br/><code>-- up_down_velocity=50</code><br/><code>-- end</code><br/><code> sim.setJointTargetPosition(right_left_handle,right_left_position)</code><br/><code> -- sim.setJointTargetVelocity(right_left_handle,right_left_velocity)</code><br/><code> sim.setJointTargetPosition(forward_back_player,forward_back_position)</code><br/><code>-- sim.setJointTargetVelocity(forward_back_player,forward_back_velocity)</code><br/><code>-- sim.setJointTargetVelocity(up_down_handle,up_down_velocity)</code><br/><code>end</code></p>
</blockquote><h2>手足球系統模擬</h2>
<p>專案成果摘要</p>
<p>專案執行動機</p>
<p>相關文獻探討</p>
<p>專案執行成員</p>
<p>執行使用套件</p>
<p>專案執行過程規劃</p>
<p>專案執行內容</p>
<p>專案結論</p>
<h1>設計與繪圖</h1>
<h2>零組件尺寸分析</h2>
<p>手足球系統的零組件尺寸分析 (可行性分析)</p>
<p><a href="https://cad.onshape.com/documents/5a59c9c739e3ae2de7916f88/w/7547fa5146549789dbd934af/e/399e742d533f4474cf84d8d2">Onshape_Football_table_V13</a> </p>
<p>總體物件除了可以透過上述連結進入 Onshape 進行檢視以外，亦可由下方的側視圖了解，整體球檯在本次專案的設計規格以及其特徵。</p>
<p>可以發現球檯本面，主體特徵是中間較高向兩側逐漸遞減高度的傾斜面，在最後一球感的下方為最低點，並在由該位置向後為傾高度。注藥布地可以參見文章最後連結，造因於當初進行物件組立完成後考量擊球問題，在尚未有完整的收球、送球機構時，為讓靜止的球可以有動能，並且讓球員可以有向的操作「接戰」動作，歲設計傾斜球檯面，以未能轉換成動能的方式行有效的擊球動作測試。</p>
<p><img caption="false" height="270" src="/images/chrome_2019-06-09_16-38-38.png" width="500"/></p>
<p><a href="https://cad.onshape.com/documents/5a59c9c739e3ae2de7916f88/v/8ddd80105537956fd86b3476/e/399e742d533f4474cf84d8d2">Onshape_Football_table_V6</a> </p>
<p>第一版本正是匯入 V-rep 進行測試。<span>總體物件除了可以透過上述連結進入 Onshape 進行檢視以外，亦可由下方的側視圖了解，整體球檯在本次專案的設計規格以及其特徵。</span></p>
<p>和最終版本最大特徵不同在於，其傾些面的方向是由中間最低點向兩側延伸，以及吊籃式的球桿位置，再者還包含球員擊球面的曲面特徵等。目的主要為第一階段的測試程式做驗證，其目的是確保運動狀態對應的程式運作正常，以及對應宣告的修正。</p>
<p>其後測試過程中，除增加了球檯及球桿的總寬，目的為增加單一球桿的球員數量。在測試過程中逐一針對問題做物件特徵修正。其一為球員擊球面為曲面，使其在擊球過程有機會力量會通過球體形心(含質心)，其構成運動狀態的死點，遂在其後修正為憑質的倒角；其二為吊籃式的球桿位置，因吊籃式球桿位置在執行鏡射或是陣列時，其相對於直接在球檯面上建立位置顯得多餘，因此後續改版後除去；再者</p>
<p><img alt="" height="272" src="/images/chrome_2019-06-09_16-57-40.png" width="500"/></p>
<p><img alt="" height="272" src="/images/chrome_2019-06-09_17-01-51.png" width="500"/><br/>(該物件規格在左側特徵樹下的 Variable，或是直接點及圖原本身，即會在右下角顯示規格)</p>
<p></p>
<p></p><h2>參數設計與繪圖</h2>
<p>手足球系統的零組件參數設計與繪圖 (零組件初步設計繪圖)</p>
<p>Onshape 零組件連結</p>
<h2>細部設計與 BOM</h2>
<h4>手足球零件格式說明</h4>
<p>手足球零件格式說明</p>
<h4>零件 BOM</h4>
<p>手足球零組件材料表 (含零組件下載連結)</p>
<h4>零件尺寸圖</h4>
<p>零件尺寸圖</p>
<h4>零件部分組裝圖</h4>
<p>零件部分組裝圖</p>
<h4>3D 零組件爆炸圖</h4>
<p>3D 零組件爆炸圖</p>
<h1>V-rep 動態模擬</h1>
<p><a href="https://youtu.be/TJR5onWZKzI">國立虎尾科技大學_機械設計工程系_協同產品設計實習_40423217_V-rep_V-rep_Football_table_P0_R2_V6_2019-0606-1630</a> </p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/TJR5onWZKzI" width="500"></iframe></p>
<p></p><h2>送球機構設計與模擬</h2>
<p></p>
<p></p>
<h2>系統功能展示</h2>
<p><strong>手足球模擬系統功能展示 (模擬展示與說明影片)</strong></p>
<p>透過條件判斷搭配鍵盤控制。</p>
<p><span>原先參照的球員左右移動為速度控制，其所控制方式為速度疊加(段落程式如下)</span></p>
<blockquote>
<p><code><span>up_down_velocity=up_down_velocity+dVel1*10</span></code></p>
<p><code><span>up_down_velocity=up_down_velocity-dVel1*10</span></code></p>
<p><span>即隨觸鍵次數對速度做累進，剎車亦然(其實沒所謂的剎車，僅是以反方向做速度遞減，若要停止遞進需觸及空白鍵停止一切運動狀態)，儘管在其後亦有條件宣告速度上限，但是在對於球員操作上仍然不夠直觀。在於及球有效角度的限制，其餘行程其實不必要，再加上模擬顯示對應視覺暫留，使用者無法判斷及球方向為何。遂修正由位置進行擊球控制。</span></p>
<p><a href="https://youtu.be/G6DX4CTpv2s">國立虎尾科技大學_機械設計工程系_協同產品設計實習_40423217_V_rep_Football_player_P0_R2_V1_2019-0530-2117</a></p>
<p><a href="https://youtu.be/f2QymQQiOtM">國立虎尾科技大學_機械設計工程系_協同產品設計實習_40423217_V_rep_Football_player_P0_R2_V2_2019-0530-2234</a></p>
</blockquote>
<p>原先參照的球員左右移動為速度控制，其所控制方式為速度疊加(段落程式如下)</p>
<blockquote>
<p><code>if (auxiliaryData[1]==2009) then right_left_velocity=right_left_velocity+dVel2/0.0025</code></p>
<p><code>if (auxiliaryData[1]==2010) then right_left_velocity=right_left_velocity-dVel2/0.0025</code></p>
<p>即隨觸鍵次數對速度做累進，剎車亦然(其實沒所謂的剎車，僅是以反方向做速度遞減，若要停止遞進需觸及空白鍵停止一切運動狀態)，儘管在其後亦有條件宣告速度上限，但是在對於球員操作上仍然不夠直觀，之於操作者可以控制球員停滯的區間不夠安定。遂採用位置不盡方式取代速度遞進控制，鎖住之於個點位置移動的快慢，操作者若需要更加得快速到達預想的位置，則可以透過觸鍵頻率的增減決定。</p>
<p><code>if (auxiliaryData[1]==2009) then right_left_position=right_left_position+dp*0.02</code></p>
<p><code>if (auxiliaryData[1]==2010) then right_left_position=right_left_position+dp*-0.02</code></p>
<p><a href="https://youtu.be/sk-plWRagRY">國立虎尾科技大學_機械設計工程系_協同產品設計實習_40423217_V-rep_Football_table_P0_R2_V5_2019-0604-1725(音量調整)</a></p>
<p>造因於球員本身的碰撞設定和球檯重疊，遂球員移動若未設定邊界，其在接觸球檯時會產生 V-rep 物理引擎運算碰撞造成的物件不穩定性，因此設定超出移動邊界時回到遽距離球檯壁面仍可以保持 0.05m 的間隙。</p>
<p><a href="https://youtu.be/6Az6APmCeH8">國立虎尾科技大學_機械設計工程系_協同產品設計實習_40423217_V-rep_V-rep_Football_table_P0_R2_V5_運動控制修正_2019-0605-0002(音量調整)</a></p>
<p><a href="https://youtu.be/TJR5onWZKzI">國立虎尾科技大學_機械設計工程系_協同產品設計實習_40423217_V-rep_V-rep_Football_table_P0_R2_V6_2019-0606-1630</a></p>
</blockquote>
<p><strong>完整程式參見個人倉儲 <a href="https://github.com/40423217/2019spring_2B_personal/issues/1">issues</a>。</strong></p><h1>結案報告</h1>
<h2>專案口頭簡報</h2>
<p>各組利用倉儲中的 Reveal.js 進行結案簡報 (結案口頭簡報)</p>
<h2>專案報告書</h2>
<p>各組完成 html 與 pdf 格式之手足球專案結案報告 (文字結案報告書)</p>